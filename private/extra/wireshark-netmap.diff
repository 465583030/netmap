diff -urp ../wireshark-1.11.2/dumpcap.c ./dumpcap.c
--- ../wireshark-1.11.2/dumpcap.c	2013-11-09 09:07:55.000000000 -0800
+++ ./dumpcap.c	2013-12-04 13:46:02.009528218 -0800
@@ -23,6 +23,8 @@
 
 #include "config.h"
 
+#define HAVE_NETMAP
+
 #include <stdio.h>
 #include <stdlib.h> /* for exit() */
 #include <glib.h>
@@ -418,6 +420,12 @@ static void report_cfilter_error(capture
 
 #define MSG_MAX_LENGTH 4096
 
+#ifdef HAVE_NETMAP
+#define NETMAP_WITH_LIBS
+#include <net/netmap_user.h>
+#endif /* HAVE_NETMAP */
+
+
 /* Copied from pcapio.c pcapng_write_interface_statistics_block()*/
 static guint64
 create_timestamp(void) {
@@ -708,6 +716,15 @@ open_capture_device(interface_options *i
               "pcap_open() returned %p.", (void *)pcap_h);
     } else
 #endif
+
+#ifdef HAVE_NETMAP
+    if ((pcap_h = (pcap_t *)nm_open(interface_opts->name,
+		getenv("NETMAP_RING_ID"), 0, 0)) || errno > 0 ) {
+	printf("--- opening netmap %s gives %p\n", interface_opts->name, pcap_h);
+	/* can return NULL if valid name but error setting netmap */
+	return pcap_h;
+    } else
+#endif /* HAVE_NETMAP */
     {
         /*
          * If we're not opening a remote device, use pcap_create() and
@@ -2740,6 +2757,11 @@ capture_loop_open_input(capture_options
 
 /* XXX - will this work for tshark? */
 #ifdef MUST_DO_SELECT
+#ifdef HAVE_NETMAP
+	if (IS_NETMAP_DESC(pcap_opts->pcap_h)) {
+		pcap_opts->pcap_fd = NETMAP_FD(pcap_opts->pcap_h);
+	} else
+#endif /* HAVE_NETMAP */
         if (!pcap_opts->from_cap_pipe) {
 #ifdef HAVE_PCAP_GET_SELECTABLE_FD
             pcap_opts->pcap_fd = pcap_get_selectable_fd(pcap_opts->pcap_h);
@@ -2823,6 +2845,12 @@ capture_loop_init_filter(pcap_t *pcap_h,
 
     /* capture filters only work on real interfaces */
     if (cfilter && !from_cap_pipe) {
+#ifdef HAVE_NETMAP
+	if (IS_NETMAP_DESC(pcap_h)) {
+		printf("no filters on netmap\n");
+		return INITFILTER_NO_ERROR; // pretend ok
+	}
+#endif /* HAVE_NETMAP */
         /* A capture filter was specified; set it up. */
         if (!compile_capture_filter(name, pcap_h, &fcode, cfilter)) {
             /* Treat this specially - our caller might try to compile this
@@ -3089,6 +3117,16 @@ capture_loop_dispatch(loop_data *ld,
                  * processing immediately, rather than processing all packets
                  * in a batch before quitting.
                  */
+#ifdef HAVE_NETMAP
+		if (IS_NETMAP_DESC(pcap_opts->pcap_h)) {
+			pcap_handler cb = use_threads ?
+				capture_loop_queue_packet_cb :
+				capture_loop_write_packet_cb ;
+			// printf("dispatch to netmap\n");
+			inpkts = nm_dispatch((struct nm_desc *)(pcap_opts->pcap_h),
+				1, (nm_cb_t)cb, (u_char *)pcap_opts);
+		} else
+#endif /* HAVE_NETMAP */
                 if (use_threads) {
                     inpkts = pcap_dispatch(pcap_opts->pcap_h, 1, capture_loop_queue_packet_cb, (u_char *)pcap_opts);
                 } else {

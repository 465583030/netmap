#!/bin/bash

error() {
	echo "ERROR: $1" | tee -a config.log
	exit 1
}

print_help() {
	echo "  --help                       print this message"
	echo "  --kernel-dir                 path to configured kernel directory"
	echo "  --kernel-sources             path to full kernel sources"
	echo "  --no-drivers                 do not compile patched drivers"
}

rm -f config.log


{
	echo "# netmap configure log $(date)"
	echo "# Configured with:"
	printf " '%s'" "$0" "$@"
	echo
	echo "#"
} > config.log

exec 2>> config.log
set -x

ksrc=
src=
nodrivers=
# get ksrc and src before anything else
for opt do
	optarg=${opt#*=}
	case "$opt" in
	--kernel-dir=*) ksrc="$optarg"
	;;
	--kernel-sources=*) src="$optarg"
	;;
	--no-drivers) nodrivers="true"
	;;
	--help)
		print_help
		exit
	;;
	*)
		echo "WARNING: Unrecognized option: $opt"
	;;
	esac
done

[ -n "$ksrc" ] || {
	# user did not provide a kernel dir,
	# we try to find one by ourselves
	ksrc="/lib/modules/$(uname -r)/build"
}

[ -n "$src" ] || {
	[ -d "$ksrc/source" ] && src="$ksrc/source"
	[ -n "$src" ] || src=$ksrc
}

[ -d "$ksrc" ] || error "Cannot find kernel directory"
[ -f "$ksrc/.config" ] || error "kernel not configured"
version_hdr="$ksrc/include/linux/version.h"
[ -f "$version_hdr" ] || version_hdr="$ksrc/include/generated/uapi/linux/version.h"
[ -f "$version_hdr" ] || error "version.h is missing"
lin_ver=$(awk '/LINUX_VERSION_CODE/ { printf "%03x%02x", $3/256, $3%256}' "$version_hdr")

patches=
s_drivers=
if [ -z "$nodrivers" ]; then
	[ -d "$src" ] || error "Cannot find kernel sources"
	[ -n "$(find "$src" -name '*.c' -print -quit)" ] ||
		error "'$src' does not appear to contain full kernel sources"
	# produce a list of applicable patches for this version
	[ -d patches ] || { rm -f patches; ln -s final-patches patches; }
	patches=$(cd patches; ls diff--* | awk -v v=$lin_ver -F -- '($3 <= v"") && (v"" < $4)')
fi

rm -f drivers.mak
for p in $patches; do
	# extract the driver name
	driver=$(echo $p | awk -F -- '{ print $2 }')
	# find the driver sources
	s=$(find $src/drivers -name "$driver" -print -quit)
	[ -n "$s" ] || { echo "WARNING: $driver sources not found"; continue; }
	cat >> drivers.mak <<EOF
get-$driver:
	cp -Rp $s .
	patch --posix --quiet --force -p1 < patches/$p
	touch get-$driver

EOF
	s_drivers="$driver $s_drivers"
done

# create Makefile
sed \
	-e "s|@KSRC@|$ksrc|g" \
	-e "s|@SRC@|$src|g" \
	-e "s|@LIN_VER@|$lin_ver|g" \
	-e "s|@NODRIVERS@|$nodrivers|g" \
	-e "s|@PATCHES@|$(echo $patches)|g" \
	-e "s|@S_DRIVERS@|$(echo $s_drivers)|g" \
	Makefile.in > Makefile


# report
echo "kernel directory            $ksrc"
echo "kernel sources              $src"
echo "linux version               $lin_ver"
echo -n "drivers                     "
if [ -n "$nodrivers" ]; then
	echo DISABLED
else
	echo $s_drivers
	echo
	echo -e "Selected patches:\n\n$patches"
fi

# To build external modules, you must have a prebuilt kernel available
# that contains the configuration and header files used in the build.
# go in the kernel directory and do a
#       make oldconfig; make scripts; make prepare
# or    make defconfig; make scripts; make prepare
#

MODNAME:=@MODNAME@
SUBSYS:=vale pipe monitor generic
NOSUBSYS:=@NOSUBSYS@
SRCDIR:=@SRCDIR@

ifneq ($(KERNELRELEASE),)
# kbuild part of Makefile

# list of objects for this module
#
# objects whose source file is in ../sys/dev/netmap
# the source is not here so we need to specify a dependency
$(foreach s,$(filter-out $(NOSUBSYS),$(SUBSYS)),$(eval CONFIG_NETMAP_$(shell echo $s|tr a-z A-Z)=y))

remoteobjs-y := netmap_mem2.o netmap_mbq.o

remoteobjs-$(CONFIG_NETMAP_VALE)    += netmap_vale.o netmap_offloadings.o
remoteobjs-$(CONFIG_NETMAP_PIPE)    += netmap_pipe.o
remoteobjs-$(CONFIG_NETMAP_MONITOR) += netmap_monitor.o
remoteobjs-$(CONFIG_NETMAP_GENERIC) += netmap_generic.o

define remote_template
$$(obj)/$(1): $$(SRCDIR)/../sys/dev/netmap/$(2)
	$$(call cmd,cc_o_c)
	$$(call cmd,modversions)
endef
$(foreach o,$(remoteobjs-y),$(eval $(call remote_template,$(o),$(o:.o=.c))))
# we compile netmap.c into netmap_common.o to allow
# for MODNAME=netmap
$(eval $(call remote_template,netmap_common.o,netmap.c))

$(obj)/netmap_linux.o: $(SRCDIR)/netmap_linux.c
	$(call cmd,cc_o_c)
	$(call cmd,modversions)

# all objects
$(MODNAME)-objs := $(remoteobjs-y) netmap_common.o netmap_linux.o

obj-$(CONFIG_NETMAP) = $(MODNAME).o

obj-$(CONFIG_V1000) += vhost-port/

ifdef NETMAP_DRIVER_SUFFIX
  $(foreach v,$(filter %.o,$(O_DRIVERS)),$(eval $(v:.o=$(NETMAP_DRIVER_SUFFIX)-objs) := $v))
  $(foreach v,$(filter %.o,$(O_DRIVERS)),$(info $(v:.o=$(NETMAP_DRIVER_SUFFIX)-objs) := $v))
  obj-m += $(O_DRIVERS:%.o=%$(NETMAP_DRIVER_SUFFIX).o)
else
	obj-m += $(O_DRIVERS)
endif

else
# normal Makefile

# The following commands are needed to build the modules as out-of-tree,
# in fact the kernel sources path must be specified.

PWD ?= $(CURDIR)

# Additional compile flags (e.g. header location)
EXTRA_CFLAGS := -I$(PWD) -I$(SRCDIR) -I$(SRCDIR)/../sys -I$(SRCDIR)/../sys/dev -DCONFIG_NETMAP
EXTRA_CFLAGS += -Wno-unused-but-set-variable
EXTRA_CFLAGS += $(foreach s,$(filter-out $(NOSUBSYS),$(SUBSYS)),-DCONFIG_NETMAP_$(shell echo $s|tr a-z A-Z))

all: netmap drivers

# We use KSRC for the kernel configuration and sources.
# If the sources are elsewhere, then use SRC to point to them.
KSRC = @KSRC@
SRC  = @SRC@
KOPTS = @KOPTS@
MODPATH = @MODPATH@
LIN_VER = @LIN_VER@
MOD_LIST := @MOD_LIST@
PATCHES = @PATCHES@
S_DRIVERS = @S_DRIVERS@
DRVSUFFIX = @DRVSUFFIX@
GET_DRIVERS = $(S_DRIVERS:%=get-%)
include drivers.mak

# actual drivers after copy and patch
DRIVERS = $(shell [ -n "$(S_DRIVERS)" ] && ls -dAp $(S_DRIVERS) 2> /dev/null)

# Compile v1000 (vhost porting to e1000) only if
# the LIN_VER >= 3.8.0, because we don't want to deal
# with backporting problems for v1000.
ifeq ($(word 1, $(sort 30800 $(LIN_VER))), 30800)
CONFIG_V1000:=m
else
CONFIG_V1000:=n
endif


COMMON_OPTS=-C $(KSRC) M=$(PWD) EXTRA_CFLAGS='$(EXTRA_CFLAGS)' $(KOPTS) modules

netmap:
	$(MAKE) $(COMMON_OPTS) CONFIG_NETMAP=m

drivers: get-drivers
	$(MAKE) $(COMMON_OPTS) $(MOD_LIST) O_DRIVERS="$(DRIVERS:%.c=%.o)" \
		NETMAP_DRIVER_SUFFIX=$(DRVSUFFIX)

install:
	$(MAKE) -C $(KSRC) M=$(PWD) CONFIG_NETMAP=m $(MOD_LIST) \
		O_DRIVERS="$(DRIVERS:%.c=%.o)" \
		$(KOPTS) \
		NETMAP_DRIVER_SUFFIX=$(DRVSUFFIX) \
		$(if $(MODPATH),INSTALL_MOD_PATH=$(MODPATH)) \
		modules_install

test:
	@echo "version $(LIN_VER)"
	@echo "patches $(PATCHES)"
	@echo "drivers $(DRIVERS)"

clean: clean-drivers
	-@ $(MAKE) -C $(KSRC) M=$(PWD) clean 2> /dev/null
	-@ rm -f *.orig *.rej *.ko *.o .*.d 		\
		*.mod.c modules.order			\
		Module.symvers .*.cmd
	-@ rm -rf .tmp_versions



test3:
	@echo "from $(PATCHES) -- to $(MYDRIVERS)"
	@echo "Drivers is $(DRIVERS)"
	@echo "Actually have `ls -d $(DRIVERS) 2> /dev/null`"

# compute the diffs for the original files
diffs:
	@for i in `find . -name \*.orig`; do 	\
		diff -urp $$i $${i%.orig} ;	\
	done

APPS_CC=@APPS_CC@
APPS_LD=@APPS_LD@
PREFIX=@PREFIX@
DESTDIR?=@DESTDIR@

apps:
	$(MAKE) -C $(SRCDIR)../examples CC="$(APPS_CC)" LD="$(APPS_LD)"

install-apps:
	$(MAKE) -C $(SRCDIR)../examples install DESTDIR="$(abspath $(DESTDIR))" PREFIX="$(PREFIX)"

+%:
	@echo $($*)

distclean: clean
	rm -f config.status config.log Makefile netmap_linux_config.h \
		patches drivers.mak
	rm -rf netmap-tmpdir
endif
